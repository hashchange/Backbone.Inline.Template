// Backbone.Inline.Template, v0.2.1
// Copyright (c) 2016 Michael Heim, Zeilenwechsel.de
// Distributed under MIT license
// http://github.com/hashchange/backbone.inline.template


!function(a,b){"use strict";"object"==typeof exports?module.exports=b(require("underscore"),require("backbone"),require("backbone.declarative.views")):"function"==typeof define&&define.amd&&define(["underscore","backbone","backbone.declarative.views"],b)}(this,function(_,Backbone){"use strict";return function(Backbone,_){function a(a){return"inline"===a.data("el-definition")}function b(a){a.attr("data-bbit-internal-template-status","updated")}function c(a){return"updated"===a.data("bbit-internal-template-status")}function d(a){var b,c,d="",e=a.replace(j,"").replace(k,""),f=l.exec(e)||m.exec(e);if(!f)throw new Backbone.DeclarativeViews.TemplateError('Backbone.Inline.Template: Failed to parse template with inline `el` definition. No matching content found.\nTemplate text is "'+a+'"');f[3]?(b=f[1]+f[3],d=f[2]):b=f[0];try{c=g(b)}catch(h){throw new Backbone.DeclarativeViews.TemplateError('Backbone.Inline.Template: Failed to parse template with inline `el` definition. Extracted `el` could not be turned into a sample node.\nExtracted `el` definition string is "'+b+'", full template text is "'+a+'"')}return{templateContent:d,$elSample:c}}function e(a,b){var c={tagName:a.prop("tagName").toLowerCase(),className:g.trim(a.attr("class")),id:g.trim(a.attr("id")),otherAttributes:{}};_.each(a[0].attributes,function(a){var b=a.nodeName,d=a.nodeValue,e=d&&"class"!==b&&"id"!==b;e&&(c.otherAttributes[a.nodeName]=d)}),"div"!==c.tagName&&b.attr("data-tag-name",c.tagName),c.className&&b.attr("data-class-name",c.className),c.id&&b.attr("data-id",c.id),_.size(c.otherAttributes)&&b.attr("data-attributes",JSON.stringify(c.otherAttributes))}function f(a){try{return 0!==h.find(a).length}catch(b){return!1}}var g=Backbone.$,h=g(document),i=Backbone.InlineTemplate={hasInlineEl:a,updateTemplateSource:!1},j=/^(\s*<!--[\s\S]*?-->)+/,k=/(<!--[\s\S]*?-->\s*)+$/,l=/(<\s*[a-zA-Z][\s\S]*?>)([\s\S]*)(<\s*\/\s*[a-zA-Z]+\s*>)/,m=/<\s*[a-zA-Z][\s\S]*?\/?\s*>/;Backbone.DeclarativeViews.plugins.registerDataAttribute("el-definition"),Backbone.DeclarativeViews.plugins.registerDataAttribute("bbit-internal-template-status"),Backbone.DeclarativeViews.plugins.registerCacheAlias(i,"inlineTemplate"),Backbone.DeclarativeViews.defaults.loadTemplate=function(h){var j,k,l=i.custom.hasInlineEl||i.hasInlineEl||a,m=i.updateTemplateSource,n=g(h);if(c(n)||!l(n))k=n;else{try{j=d(n.html())}catch(o){throw o.message+='\nThe template was requested for template property "'+h+'"',o}if(m){if(!f(h))throw new Backbone.DeclarativeViews.TemplateError("Backbone.Inline.Template: Can't update the template container because it doesn't exist in the DOM. The template property must be a valid selector (and not, for instance, a raw HTML string). Instead, we got \""+h+'"');k=n,b(k)}else k=g("<script />").attr("type","text/x-template");e(j.$elSample,k),k.empty().text(j.templateContent)}return k}}(Backbone,_),Backbone.InlineTemplate});
//# sourceMappingURL=backbone.inline.template.min.js.map