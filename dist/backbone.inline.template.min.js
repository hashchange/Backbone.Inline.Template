// Backbone.Inline.Template, v0.1.0
// Copyright (c) 2016 Michael Heim, Zeilenwechsel.de
// Distributed under MIT license
// http://github.com/hashchange/backbone.inline.template


!function(Backbone,_){"use strict";function a(a){return"inline"===a.data("el-definition")}function b(a){a.removeAttr("data-el-definition")}function c(a){var b,c,d="",e=i.exec(a)||j.exec(a);if(!e)throw new Backbone.DeclarativeViews.TemplateError('Backbone.Inline.Template: Failed to parse template with inline `el` definition. No matching content found.\nTemplate text is "'+a+'"');e[3]?(b=e[1]+e[3],d=e[2]):b=e[0];try{c=f(b)}catch(g){throw new Backbone.DeclarativeViews.TemplateError('Backbone.Inline.Template: Failed to parse template with inline `el` definition. Extracted `el` could not be turned into a sample node.\nExtracted `el` definition string is "'+b+'", full template text is "'+a+'"')}return{templateContent:d,$elSample:c}}function d(a,b){var c={tagName:a.prop("tagName").toLowerCase(),className:f.trim(a.attr("class")),id:f.trim(a.attr("id")),otherAttributes:{}};_.each(a[0].attributes,function(a){var b=a.nodeName,d=a.nodeValue,e=d&&"class"!==b&&"id"!==b;e&&(c.otherAttributes[a.nodeName]=d)}),"div"!==c.tagName&&b.attr("data-tag-name",c.tagName),c.className&&b.attr("data-class-name",c.className),c.id&&b.attr("data-id",c.id),_.size(c.otherAttributes)&&b.attr("data-attributes",JSON.stringify(c.otherAttributes))}function e(a){try{return 0!==g.find(a).length}catch(b){return!1}}var f=Backbone.$,g=f(document),h=Backbone.InlineTemplate={hasInlineEl:a,removeInlineElMarker:b,updateOriginalTemplates:!1},i=/(<\s*[a-zA-Z].*?>)([\s\S]*)(<\s*\/\s*[a-zA-Z]+\s*>)/,j=/<\s*[a-zA-Z].*?\/\s*>/;Backbone.DeclarativeViews.plugins.registerDataAttribute("el-definition"),Backbone.DeclarativeViews.plugins.registerCacheAlias(h,"inlineTemplate"),Backbone.DeclarativeViews.defaults.loadTemplate=function(b){var g,i,j=h.custom.hasInlineEl||h.hasInlineEl||a,k=h.custom.hasOwnProperty("removeInlineElMarker")?h.custom.removeInlineElMarker:h.removeInlineElMarker,l=h.updateOriginalTemplates,m=f(b);if(j(m)){try{g=c(m.html())}catch(n){throw n.message+='\nThe template was requested for template property "'+b+'"',n}if(l){if(!e(b))throw new Backbone.DeclarativeViews.TemplateError("Backbone.Inline.Template: Can't update the template container because it doesn't exist in the DOM. The template property must be a valid selector (and not, for instance, a raw HTML string). Instead, we got \""+b+'"');i=m,_.isFunction(k)&&k(i)}else i=f("<script />").attr("type","text/x-template");d(g.$elSample,i),i.empty().text(g.templateContent)}else i=m;return i}}(Backbone,_);
//# sourceMappingURL=backbone.inline.template.min.js.map